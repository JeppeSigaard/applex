cordova.define("com.unarin.cordova.beacon.CircularRegion",function(e,r,o){function i(e,r,o,t){n.call(this,e),i.checkLatitude(r),i.checkLongitude(o),i.checkRadius(t),this.latitude=r,this.longitude=o,this.radius=t,this.typeName="CircularRegion"}var t=e("com.unarin.cordova.beacon.underscorejs"),n=e("com.unarin.cordova.beacon.Region");i.prototype=Object.create(n.prototype),i.prototype.constructor=i,i.checkRadius=function(e){if(t.isNaN(e))throw new TypeError("'radius' is not a number.");if(!t.isNumber(e))throw new TypeError("'radius'"+e+" is not number.");if(e<0)throw new Error("'radius' has to be a finite, positive number.")},i.checkLongitude=function(e){if(t.isNaN(e))throw new TypeError("'longitude' is not a number.");if(!t.isNumber(e))throw new TypeError(e+" is not a Number.");if(e>180||e<-180)throw new Error(e+" has to be a value between -180 and +180")},i.checkLatitude=function(e){if(t.isNaN(e))throw new TypeError("'latitude' is not a number.");if(!t.isNumber(e))throw new TypeError(e+" is not a Number.");if(e>90||e<-90)throw new Error(e+" has to be a value between -90 and +90")},o.exports=i});