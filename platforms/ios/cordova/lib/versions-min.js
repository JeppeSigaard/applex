#!/usr/bin/env node
var child_process=require("child_process"),Q=require("q");exports.get_apple_ios_version=function(){var e=Q.defer();return child_process.exec("xcodebuild -showsdks",function(r,o,s){r?e.reject(s):e.resolve(o)}),e.promise.then(function(e){var r=/[0-9]*\.[0-9]*/,o=[],s=/^iOS \d+/;e=e.split("\n");for(var t=0;t<e.length;t++)e[t].trim().match(s)&&(o[o.length]=parseFloat(e[t].match(r)[0]));return o.sort(),console.log(o[0]),Q()},function(e){return Q.reject(e)})},exports.get_apple_osx_version=function(){var e=Q.defer();return child_process.exec("xcodebuild -showsdks",function(r,o,s){r?e.reject(s):e.resolve(o)}),e.promise.then(function(e){var r=/[0-9]*\.[0-9]*/,o=[],s=/^OS X \d+/;e=e.split("\n");for(var t=0;t<e.length;t++)e[t].trim().match(s)&&(o[o.length]=parseFloat(e[t].match(r)[0]));return o.sort(),console.log(o[0]),Q()},function(e){return Q.reject(e)})},exports.get_apple_xcode_version=function(){var e=Q.defer();return child_process.exec("xcodebuild -version",function(r,o,s){var t=/Xcode (.*)/.exec(o);r||!t?e.reject(s):e.resolve(t[1])}),e.promise},exports.get_ios_deploy_version=function(){var e=Q.defer();return child_process.exec("ios-deploy --version",function(r,o,s){r?e.reject(s):e.resolve(o)}),e.promise},exports.get_cocoapods_version=function(){var e=Q.defer();return child_process.exec("pod --version",function(r,o,s){r?e.reject(s):e.resolve(o)}),e.promise},exports.get_ios_sim_version=function(){var e=Q.defer();return child_process.exec("ios-sim --version",function(r,o,s){r?e.reject(s):e.resolve(o)}),e.promise},exports.get_tool_version=function(e){switch(e){case"xcodebuild":return exports.get_apple_xcode_version();case"ios-sim":return exports.get_ios_sim_version();case"ios-deploy":return exports.get_ios_deploy_version();case"pod":return exports.get_cocoapods_version();default:return Q.reject(e+" is not valid tool name. Valid names are: 'xcodebuild', 'ios-sim', 'ios-deploy', and 'pod'")}},exports.compareVersions=function(e,r){function o(e){return e.split(".").map(function(e){var r=Number(e);if(isNaN(r))throw"Version should contain only numbers and dots";return r})}for(var s=o(e),t=o(r),n=0;n<Math.max(s.length,t.length);n++){var i=(s[n]||0)-(t[n]||0);if(0!==i)return i}return 0};